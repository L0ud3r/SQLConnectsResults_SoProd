@model List<SoProd.Web.Models.TestResultViewModel>

@{
    ViewBag.Title = "Home Page";
}

<style>
    .tablerow:hover {
        cursor: pointer;
        background-color: lightgray
    }

    .result-box {
        display: flex;
        flex-direction: column;
        border: 3px solid lightblue;
        padding: 5px;
        text-align:center
    }

    .result-box-line {
        display: flex;
        flex-direction: row;
        justify-content: space-between
    }

    .centered-box {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        width: 15%;
        text-align: center
    }

    .empty-results {
        margin: auto;
        padding: 10%;
        border: 1px solid lightgrey;
        text-align: center
    }

    .filter-icon {
        margin: auto;
        color: skyblue;
    }

    .filter-icon:hover {
        cursor: pointer;
    }
</style>

<div class="portlet box blue mt-4">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-cogs"></i>Results Comparation
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
        </div>
    </div>
    <div class="portlet-body" style="display: flex; justify-content:space-around">
        <div>
            <div class="mb-3" style="display: flex; gap: 5px">
                <select id="select2-version-1" class="select2-version-1" style="width: 300px">
                    <option value="">Choose a version</option>
                </select>
                <input id="date-1" type="date" class="form-control" required />
                <i id="filter-compare" data-id="1" class="fa fa-filter filter-icon" data-toggle="modal" href="#basic"></i>
            </div>
            <div id="result1" class="result-box">
                No data
            </div>
        </div>
        <div class="centered-box">
            <button type="button" id="btn-compare" class="btn btn-info compare">Compare</button>
            <div id="comparison-result"></div>
            <div id="result-text"></div>
        </div>
        <div>
            <div class="mb-3" style="display: flex; gap: 5px">
                <select id="select2-version-2" class="select2-version-2" style="width: 300px">
                    <option value="">Choose a version</option>
                </select>
                <input id="date-2" type="date" class="form-control" required />
                <i id="filter-compare" data-id="2" class="fa fa-filter filter-icon" data-toggle="modal" href="#basic"></i>
            </div>
            <div id="result2" class="result-box">
                No data
            </div>
        </div>
    </div>
    <div class="modal fade" id="basic" tabindex="-1" role="basic" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Test Results</h4>
                </div>
                <div class="modal-body">
                    <div style="height: 500px; overflow: auto; border: 2px solid lightblue ">
                        <ul style="list-style: none">
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                            <li style="display: flex; gap: 5px"><input type="checkbox" /> x</li>
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn blue">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="portlet box red mt-1">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-cogs"></i>Database Results
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            </a>
        </div>
    </div>
    <div class="portlet-body" style="display: block;">
        <div class="mb-3">
            <select id="select2-request" class="select2-request" style="width: 35%">
                <option value="">All Versions</option>
            </select>
        </div>
        <div class="table-responsive">
            <table id="results" class="table table-advance">
                <thead>
                    <tr>
                        <th data-field="Id" class="no-sort column-id">ID</th>
                        <th data-filed="Identifier" class="no-sort">Identifier</th>
                        <th data-filed="StartDate" class="no-sort">Start Date</th>
                        <th data-filed="TimeEllapsed" class="no-sort">Time Ellapsed (ms)</th>
                        <th data-filed="Version" class="no-sort">Version</th>
                        <th data-filed="RequestsNumber" class="no-sort">Total Requests</th>
                        <th data-filed="AvgRequestTime" class="no-sort">Average Request Time (s)</th>
                        <th data-filed="RequestPercentage" class="no-sort">Ok Percentage</th>
                        <th data-filed="MaxRequestTime" class="no-sort">Max Request (s)</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var page = 0;

        //#region select2 activation and fill

        var select = $('#select2-request');
        var select1 = $('#select2-version-1');
        var select2 = $('#select2-version-2');

        select.select2();
        select1.select2();
        select2.select2();

        $.ajax({
            url: '/Home/GetVersions',
            type: 'GET',
            success: function (response) {
                $.each(response.themes, function (index, item) {
                    select.append('<option>' + item + '</option>');
                });
                $.each(response.themes, function (index, item) {
                    select1.append('<option>' + item + '</option>');
                });
                $.each(response.themes, function (index, item) {
                    select2.append('<option>' + item + '</option>');
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("Error on loading data...")
            }
        });

        //#endregion

        TableInit('#results', {
            "serverSide": true,
            "ajax": function (data, callback, settings) {
                var totalColLen = $("#results").DataTable().columns()[0].length;
                data.countColumns = totalColLen;

                performSearch(data, function (resp, listIds, headers) {
                    respData = resp.data
                    var responseData = WriteTableColumns(resp.data);

                    resp.data = responseData;
                    callback(resp);
                });
            },
            "language": dataTableFR,
            "aaSorting": [[0, 'desc']],
            "fnCreatedRow": function (nRow, aData, iDataIndex) {
                $(nRow).attr('id', "tablerow");
                $(nRow).attr('data-id', aData[0])
                

                $(nRow).click(function (e)
                {
                    var dataId = $(this).data('id');
                    GetExecutions($(nRow), dataId);
                })
            },
            "lengthMenu": [[20, 50, 100, -1], [20, 50, 100, "All"]],
            "iDisplayLength": 20,
            "bDeferRender": true,
            "bautoWidth": false,
            "columnDefs": [{
                "targets": 'no-sort',
                "orderable": false,
            }]
        });

        function performSearch(originalData, callback) {
            //var searchData = getDomainsSearchFilters();

            //Metronic.blockUI({
            //    target: '#results',
            //    overlayColor: '#000', overlayOpacity: '0.8',
            //    centerY: true,
            //    centerX: true,
            //    animate: true
            //});

            $.ajax({
                url: "/Home/GetResultsJson",
                method: "POST",
                data: {
                    dtFilters: originalData
                },
                error: function () {
                    alert("error");
                    /*Metronic.unblockUI('#results');*/
                },
                success: function (data) {
                    var _rows = [];
                    //Metronic.unblockUI('#results');
                    if (data.error) {
                        showWarning("Error Validating", "Please check form inputs and try again...");
                    }
                    else {
                        $.each(data.aaData, function (a, b) {
                            _rows.push(b);
                        });

                        //currentSearchTotal = data.iTotal;
                        if (callback) {
                            callback({
                                "draw": data.draw,
                                "recordsTotal": data.iTotal,
                                "recordsFiltered": data.iTotal,
                                "data": _rows
                            });
                        }
                    }
                }
            });
        }

        function getDomainsSearchFilters() {
            var data = {};
            $("#domainsFiltersUL li").each(function () {
                data[$(this).attr('data-label')] = $(this).attr('data-val');
            });

            return data;
        }

        function WriteTableColumns(alldata) {
            var __data = [];

            $.each(alldata, function (indexRow, data) {
                var _data = [];
                var startPos = 0;

                for (var i = startPos; i <= 8; i++) {
                    switch (i) {
                        case 0:
                            _data.push(data.Id);
                            break;
                        case 1:
                            _data.push(data.Identifier)
                            break;
                        case 2:
                            var startDateStr = data.StartDate.toString();

                            if (startDateStr.length > 0) {
                                var startDate = new Date(parseInt(startDateStr.substr(6)));
                                var formattedStartDate = startDate.toLocaleString().replace(',', '');
                            }

                            _data.push(formattedStartDate)
                            break;
                        case 3:
                            _data.push(data.TimeEllapsed)
                            break;
                        case 4:
                            if (data.Version == null)
                                data.Version = "N/A"

                            _data.push(data.Version)
                            break;
                        case 5:
                            _data.push(data.RequestsNumber)
                            break;
                        case 6:
                            if (data.AvgRequestTime == null)
                                data.AvgRequestTime = "N/A"

                            _data.push(data.AvgRequestTime)
                            break;
                        case 7:
                            if (data.RequestPercentage == 0 && data.RequestsNumber == 0)
                                data.RequestPercentage = "N/A"
                            else if (data.RequestPercentage == 0 && data.RequestsNumber != 0)
                                data.RequestPercentage = "0 %"
                            else
                                data.RequestPercentage = data.RequestPercentage + " %"

                            _data.push(data.RequestPercentage)
                            break;
                        case 8:
                            _data.push(data.MaxRequestTime)
                            break;
                        default:
                            break;
                    }
                }
                __data.push(_data);

            });
            return __data;
        }

        $(document).ready(function () {
            TableInit('#results');
        });

        function GetExecutions(nRow, id) {
            if ($(`#executions-stats-${id}`).length) {
                $(`#executions-stats-${id}`).remove()

            }
            else {
                $.ajax({
                    url: "/Home/GetResultExecutions/" + id,
                    type: "GET",
                    success: function (data) {
                        $("[id^='executions-stats-']").remove()

                        if (data.results.length > 0) {
                            $(nRow).after(`
                            <tr id="executions-stats-${id}" style="align-self: center">
                                <td></td>
                                <td></td>
                                <td></td>
                                <td colspan="5" >
                                    <table class="table border">
                                        <thead>
                                            <tr>
                                                <th style="font-weight: bold;">Endpoint</th>
                                                <th style="font-weight: bold;">Total Requests</th>
                                                <th style="font-weight: bold;">OK Response Percentage</th>
                                                <th style="font-weight: bold;">Average Request Time(s)</th>
                                                <th style="font-weight: bold;">Max Request Time(s)</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </td>
                            </tr>`)

                            $.each(data.results, function (index, item) {
                                var tr = $('<tr>');
                                tr.append($('<td>').text(item.Endpoint));
                                tr.append($('<td>').text(item.RequestsNumber));
                                tr.append($('<td>').text(item.RequestPercentage + " %"));
                                tr.append($('<td>').text(item.AvgRequestTime));
                                tr.append($('<td>').text(item.MaxRequestTime));

                                $(`#executions-stats-${id} tbody`).append(tr)
                            });
                        }
                        else {
                            $(nRow).after(`
                            <tr id="executions-stats-${id}" style="align-self: center">
                                <td></td>
                                <td></td>
                                <td colspan="5" >
                                    <div class="empty-results">
                                        There are no executions made in this test!
                                    </div>
                            </tr>`)
                        }

                    },
                    error: function (jqXHR) {
                        console.log(jqXHR.responseText)
                        alert("Error retrieving test results.");
                    }
                });
            }
        };

        $('#select2-request').on('change', function () {
            var selectedValue = $(this).val();

            $.ajax({
                url: '/Home/SearchResults?version=' + selectedValue,
                type: 'GET',
                data: { searchTerm: selectedValue },
                success: function (response) {
                    var tbody = $('#results tbody');
                    tbody.empty();

                    $.each(response.results, function (index, item) {
                        var tr = $('<tr>').addClass('tablerow').attr('data-item-id', item.Id);
                        tr.append($('<td>').text(item.Id));
                        tr.append($('<td>').text(item.Identifier));

                        var startDateStr = item.StartDate.toString();

                        if (startDateStr.length > 0) {
                            var startDate = new Date(parseInt(startDateStr.substr(6)));
                            var formattedStartDate = startDate.toLocaleString().replace(',', '');
                            tr.append($('<td>').text(formattedStartDate));
                        }

                        tr.append($('<td>').text(Math.round(item.TimeEllapsed, 4)));
                        tr.append($('<td>').text(item.Version));
                        tr.append($('<td>').text(item.RequestsNumber));
                        tr.append($('<td>').text(item.AvgRequestTime));
                        tr.append($('<td>').text(item.RequestPercentage));
                        tr.append($('<td>').text(item.MaxRequestTime));
                        tbody.append(tr);
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error on loading data...');
                }
            });
        });

        $("#btn-compare").click(function () {

            let comparison = {
                Version1: $('#select2-version-1 option:selected').val(),
                Date1: $("#date-1").val(),
                Version2: $('#select2-version-2 option:selected').val(),
                Date2: $("#date-2").val()
            };

            if (comparison.Version1 != "" && comparison.Version2 != "") {
                $.ajax({
                    url: '/Home/Compare',
                    type: 'POST',
                    data: comparison,
                    success: function (response) {
                        console.log(response.compare1)

                        const comparison1 = response.resultComparison.comparison1;
                        const comparison2 = response.resultComparison.comparison2;

                        const result1 = document.querySelector('#result1');
                        const result2 = document.querySelector('#result2');

                        if (comparison1.TestsCount != 0) {
                            const newHtml1 = `
                                <div class="result-box-line">
                                    <label>Request Average</label>
                                    <label id="c1-avg">${comparison1.AvgRequest.toFixed(2)}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Total Requests</label>
                                    <label id="c1-total">${comparison1.TotalRequest}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Users Number</label>
                                    <label id="c1-users">${comparison1.UsersNumber}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Requests OK (%)</label>
                                    <label id="c1-ok">${comparison1.PercentRequest.toFixed(2)}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Max Request Time (s)</label>
                                    <label id="c1-max">${comparison1.MaxRequest.toFixed(2)}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Tests Number</label>
                                    <label id="c1-tests">${comparison1.TestsCount}</label>
                                </div>
                            `;

                            result1.innerHTML = newHtml1;
                        }
                        else {
                            const newHtml1 = `This version has no tests on this date `
                            document.querySelector('#result-text').innerHTML = ""
                            document.querySelector('#icon-result').hidden = true

                            result1.innerHTML = newHtml1;
                        }

                        if (comparison2.TestsCount != 0) {

                            const newHtml2 = `
                                <div class="result-box-line">
                                    <label>Request Average Time (s)</label>
                                    <label id="c2-avg">${comparison2.AvgRequest.toFixed(2)}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Total Requests</label>
                                    <label id="c2-total">${comparison2.TotalRequest}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Users Number</label>
                                    <label id="c2-users">${comparison2.UsersNumber}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Requests OK (%)</label>
                                    <label id="c2-ok">${comparison2.PercentRequest.toFixed(2)}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Max Request Time (s)</label>
                                    <label id="c2-max">${comparison2.MaxRequest.toFixed(2)}</label>
                                </div>
                                <div class="result-box-line">
                                    <label>Tests Number</label>
                                    <label id="c2-tests">${comparison2.TestsCount}</label>
                                </div>
                            `;

                            result2.innerHTML = newHtml2;
                        }
                        else {
                            const newHtml2 = `This version has no tests on this date `
                            document.querySelector('#result-text').innerHTML = ""
                            document.querySelector('#icon-result').hidden = true

                            result2.innerHTML = newHtml2;
                        }

                        if (comparison1.TestsCount != 0 && comparison2.TestsCount != 0) {
                            let points1 = 0
                            let points2 = 0

                            if (comparison1.AvgRequest < comparison2.AvgRequest) {
                                document.querySelector('#c1-avg').style.color = 'green';
                                points1 = points1 + 1;
                            }
                            else {
                                document.querySelector('#c2-avg').style.color = 'green';
                                points2 = points2 + 1;
                            }

                            if (comparison1.TotalRequest > comparison2.TotalRequest) {
                                document.querySelector('#c1-total').style.color = 'green';
                                points1 = points1 + 1;
                            }
                            else {
                                document.querySelector('#c2-total').style.color = 'green';
                                points2 = points2 + 1;
                            }

                            if (comparison1.UsersNumber > comparison2.UsersNumber) {
                                document.querySelector('#c1-users').style.color = 'green';
                                points1 = points1 + 1;
                            }
                            else {
                                document.querySelector('#c2-users').style.color = 'green';
                                points2 = points2 + 1;
                            }

                            if (comparison1.PercentRequest > comparison2.PercentRequest) {
                                document.querySelector('#c1-ok').style.color = 'green';
                                points1 = points1 + 1;
                            }
                            else {
                                document.querySelector('#c2-ok').style.color = 'green';
                                points2 = points2 + 1;
                            }

                            if (comparison1.MaxRequest < comparison2.MaxRequest) {
                                document.querySelector('#c1-max').style.color = 'green';
                                points1 = points1 + 1;
                            }
                            else {
                                document.querySelector('#c2-max').style.color = 'green';
                                points2 = points2 + 1;
                            }

                            if (comparison1.TestsCount > comparison2.TestsCount) {
                                document.querySelector('#c1-tests').style.color = 'green';
                                points1 = points1 + 1;
                            }
                            else {
                                document.querySelector('#c2-tests').style.color = 'green';
                                points2 = points2 + 1;
                            }

                            var arrow = null

                            if (points1 > points2) {
                                arrow = '<icon id="icon-result" class="fa fa-arrow-circle-o-left" style="color: lightskyblue; font-size: 5em;" ></icon >'
                                document.querySelector('#result-text').innerHTML = 'seems to be the better version!'
                            }
                            else if (points1 == points2) {
                                document.querySelector('#result-text').innerHTML = 'both seem to have the similar results!'
                            }
                            else {
                                arrow = '<icon id="icon-result" class="fa fa-arrow-circle-o-right" style="color: lightskyblue; font-size: 5em;"></icon>'
                                document.querySelector('#result-text').innerHTML = 'seems to be the better version!'
                            }

                            document.querySelector('#comparison-result').innerHTML = arrow
                            document.querySelector('#icon-result').hidden = false
                        }

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Erro")
                        console.log(jqXHR);
                    }
                });
            }
            else
                alert("Missing fields!")
        })

        $('i#filter-compare').on('click', function (event) {
            const dataId = $(this).data('id');


        });

    </script>
}